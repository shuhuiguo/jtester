####################################
# Default configuration of jTester #
####################################

# This file contains default configuration values for jtester. 
# This file should not be edited.
# All properties in this file can be overridden, either in the project specific properties file (jtester.properties)
# or in the local properties file (configured by jtester.configuration.customFileName).

# Name or path of the project specific properties file. The system will try to find this file in the classpath (recommended),
# the user home folder or the local filesystem
jtester.configuration.customFileName=jtester.properties
# Name or path of the user specific properties file. This file may contain the necessary parameters to connect to the
# developer's own unit test schema. It is recommended to override the name of this file in the project specific properties
# file, to include the name of the project. The system will try to find this file in the classpath, the user home folder
# (recommended) or the local filesystem.
jtester.configuration.localFileName=jtester-local.properties

# Loading sequence of modules.
# Overloading this list is normally not useful, unless you want to add a custom module. 
# Disabling a module can be performed by setting jtester.module.<modulename>.enabled to false.
# If a module's specific dependencies are not found (e.g. hibernate is not in you classpath), this module is not loaded, even if it is in this list and the enabled property is set to true. 
# It's therefore not strictly necessary to disable any of these modules.
jtester.modules=database,jmockit,spring,inject

#### jTester core configuration ###
# For each module, the implementation class is listed in jtester.module.<modulename>.className.
# Disabling a module can be performed by setting jtester.module.<modulename>.enabled to false.
jtester.module.database.className=org.jtester.module.database.DatabaseModule
jtester.module.database.enabled=true
jtester.module.database.enabled.class=

jtester.module.jmockit.className=org.jtester.module.jmockit.JMockitModule
jtester.module.jmockit.enabled=true
jtester.module.jmockit.enabled.class=mockit.Mockit

jtester.module.inject.className=org.jtester.module.inject.InjectModule
jtester.module.inject.enabled=true
jtester.module.inject.enabled.class=

jtester.module.spring.className=org.jtester.module.spring.SpringModule
jtester.module.spring.enabled=true
jtester.module.spring.enabled.class=org.springframework.context.support.AbstractApplicationContext

### =========================  ###
### SpringModule configuration ###
### =========================  ###
# spring\u6a21\u5757ApplicationContextFactory\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b #
SpringModule.ApplicationContextFactory.ImplClassName=org.jtester.module.spring.strategy.ClassPathXmlApplicationContextFactory
#\u4f7f\u7528jtester\u4e2d\u7684datasource\u66ff\u6362spring\u4e2did=${spring.datasource.name}\u7684datasource bean
#\u5e9f\u5f03\u7684\u5b9a\u4e49: spring.datasource.name=dataSource
SpringModule.DataSource.Name=dataSource

#\u662f\u5426\u4f7f\u7528spring\u7684Enhancer cache
#\u4e0d\u4f7f\u7528\uff0c\u4f1a\u5bfc\u81f4aop class\u589e\u52a0\uff0c\u5bfc\u81f4perm\u533a\u5185\u5b58\u6ea2\u51fa
#\u4f7f\u7528\uff0c\u4f1a\u5bfc\u81f4\u5f88\u591abean factory\u65e0\u6cd5\u91ca\u653e\uff0c\u5bfc\u81f4heap\u533a\u6ea2\u51fa\uff1a\u95ee\u9898\u5f85\u67e5
spring.enhancer.cache.used = true
#\u5141\u8bb8\u5c06\u6240\u6709spring bean\u90fd\u8bbe\u7f6e\u6210lazy\u52a0\u8f7d\u6a21\u5f0f
spring.lazy.load=true

### DatabaseModule Configuration ###

## Full qualified class name of an implementation of o DataSourceFactory. This class is used
# to provide a DataSource for all database unit tests and for the DBMaintainer.
org.jtester.module.database.DataSourceFactory.implClassName=org.jtester.module.database.JTesterDataSourceFactory

### \u9ed8\u8ba4\u7684\u4e8b\u52a1\u6a21\u5f0f ###
# Default behavior concerning execution of tests in a transaction. Supported values are 'disabled', 'commit' and 'rollback'.
# If set to disabled, test are not executed in a transaction by default. If set to commit, each test is run in a transaction,
# which is committed. If set to rollback, each test is run in a transaction, which is rolled back. 
transactional.mode.default=rollback

#database.type=h2db
database.type=
database.driverClassName=
database.url=
database.userName=
database.password=
# A comma-separated list of all used database schemas. 
# The first schema name is the default one.
# A schema name is case sensitive if it's surrounded by database identifier quotes (e.g. " for oracle)
database.schemaNames=
# Supported values are 'oracle', 'mysql', 'postgresql', 'derby' and 'mssql'. 
# The value of this property defines which vendor specific implementations of DbSupport and ConstraintsDisabler are chosen.
database.dialect=
#\u662f\u5426\u53ea\u80fd\u8fde\u63a5\u672c\u5730\u6570\u636e\u5e93\u548c\u4ee5test\u5f00\u5934\u6216\u7ed3\u5c3e\u7684\u6570\u636e\u5e93
database.only.testdb.allowing=true

#log4j.xml.file=classpath:org/jtester/utility/log4j.xml
log4j.xml.file=
# \u63d0\u793a\u4fe1\u606f\u7ea7\u522b DEBUG INFO WARNING ERROR
log.level = INFO

#jspec\u6587\u4ef6\u5185\u5bb9\u7684\u683c\u5f0f\uff0cXML\u6216\u8005TXT
jspec.file.type=XML
#jspec\u8fd0\u884c\u7684\u6570\u636e\u6765\u6e90\uff0cclasspath: \u672c\u5730classpath\u8def\u5f84\uff1btitian: \u68af\u7530\u8fdc\u7a0b\u63d0\u4f9b
jspec.story.source=classpath
#\u68af\u7530\u670d\u52a1\u5730\u5740
jspec.titian.url=
#\u9ed8\u8ba4\u7ad9\u70b9
jspec.titian.site=CRM
#\u9ed8\u8ba4\u9879\u76ee\u7f16\u53f7
jspec.titian.project=